ifndef _INC_SDKDDKVER
_INC_SDKDDKVER equ <>
.pragma list(push, 0)

ifndef WINAPI	; default (API) type
ifdef _WIN64
WINAPI equ <>
else
WINAPI equ <stdcall>
endif
endif

.pragma cref(push, 0)

_INTEGRAL_MAX_BITS	equ 64
_WIN32_WINNT_NT4	equ 0x0400
_WIN32_WINNT_WIN2K	equ 0x0500
_WIN32_WINNT_WINXP	equ 0x0501
_WIN32_WINNT_WS03	equ 0x0502
_WIN32_WINNT_WIN6	equ 0x0600
_WIN32_WINNT_VISTA	equ 0x0600
_WIN32_WINNT_WS08	equ 0x0600
_WIN32_WINNT_LONGHORN	equ 0x0600
_WIN32_WINNT_WIN7	equ 0x0601
_WIN32_WINNT_WIN8	equ 0x0602
_WIN32_WINNT_WINBLUE	equ 0x0603
_WIN32_WINNT_WIN10	equ 0x0A00
_WIN32_WINNT_WINTHRESHOLD equ 0x0A00

_WIN32_IE_IE20		equ 0x0200
_WIN32_IE_IE30		equ 0x0300
_WIN32_IE_IE302		equ 0x0302
_WIN32_IE_IE40		equ 0x0400
_WIN32_IE_IE401		equ 0x0401
_WIN32_IE_IE50		equ 0x0500
_WIN32_IE_IE501		equ 0x0501
_WIN32_IE_IE55		equ 0x0550
_WIN32_IE_IE60		equ 0x0600
_WIN32_IE_IE60SP1	equ 0x0601
_WIN32_IE_IE60SP2	equ 0x0603
_WIN32_IE_IE70		equ 0x0700
_WIN32_IE_IE80		equ 0x0800
_WIN32_IE_IE90		equ 0x0900
_WIN32_IE_IE100		equ 0x0A00
_WIN32_IE_IE110		equ 0x0A00

_WIN32_IE_NT4		equ _WIN32_IE_IE20
_WIN32_IE_NT4SP1	equ _WIN32_IE_IE20
_WIN32_IE_NT4SP2	equ _WIN32_IE_IE20
_WIN32_IE_NT4SP3	equ _WIN32_IE_IE302
_WIN32_IE_NT4SP4	equ _WIN32_IE_IE401
_WIN32_IE_NT4SP5	equ _WIN32_IE_IE401
_WIN32_IE_NT4SP6	equ _WIN32_IE_IE50
_WIN32_IE_WIN98		equ _WIN32_IE_IE401
_WIN32_IE_WIN98SE	equ _WIN32_IE_IE50
_WIN32_IE_WINME		equ _WIN32_IE_IE55
_WIN32_IE_WIN2K		equ _WIN32_IE_IE501
_WIN32_IE_WIN2KSP1	equ _WIN32_IE_IE501
_WIN32_IE_WIN2KSP2	equ _WIN32_IE_IE501
_WIN32_IE_WIN2KSP3	equ _WIN32_IE_IE501
_WIN32_IE_WIN2KSP4	equ _WIN32_IE_IE501
_WIN32_IE_XP		equ _WIN32_IE_IE60
_WIN32_IE_XPSP1		equ _WIN32_IE_IE60SP1
_WIN32_IE_XPSP2		equ _WIN32_IE_IE60SP2
_WIN32_IE_WS03		equ 0x0602
_WIN32_IE_WS03SP1	equ _WIN32_IE_IE60SP2
_WIN32_IE_WIN6		equ _WIN32_IE_IE70
_WIN32_IE_LONGHORN	equ _WIN32_IE_IE70
_WIN32_IE_WIN7		equ _WIN32_IE_IE80
_WIN32_IE_WIN8		equ _WIN32_IE_IE100
_WIN32_IE_WINBLUE	equ _WIN32_IE_IE100
_WIN32_IE_WINTHRESHOLD	equ _WIN32_IE_IE110
_WIN32_IE_WIN10		equ _WIN32_IE_IE110


NTDDI_WIN2K		equ 0x05000000
NTDDI_WIN2KSP1		equ 0x05000100
NTDDI_WIN2KSP2		equ 0x05000200
NTDDI_WIN2KSP3		equ 0x05000300
NTDDI_WIN2KSP4		equ 0x05000400

NTDDI_WINXP		equ 0x05010000
NTDDI_WINXPSP1		equ 0x05010100
NTDDI_WINXPSP2		equ 0x05010200
NTDDI_WINXPSP3		equ 0x05010300
NTDDI_WINXPSP4		equ 0x05010400

NTDDI_WS03		equ 0x05020000
NTDDI_WS03SP1		equ 0x05020100
NTDDI_WS03SP2		equ 0x05020200
NTDDI_WS03SP3		equ 0x05020300
NTDDI_WS03SP4		equ 0x05020400

NTDDI_WIN6		equ 0x06000000
NTDDI_WIN6SP1		equ 0x06000100
NTDDI_WIN6SP2		equ 0x06000200
NTDDI_WIN6SP3		equ 0x06000300
NTDDI_WIN6SP4		equ 0x06000400

NTDDI_VISTA		equ NTDDI_WIN6
NTDDI_VISTASP1		equ NTDDI_WIN6SP1
NTDDI_VISTASP2		equ NTDDI_WIN6SP2
NTDDI_VISTASP3		equ NTDDI_WIN6SP3
NTDDI_VISTASP4		equ NTDDI_WIN6SP4

NTDDI_LONGHORN		equ NTDDI_VISTA

NTDDI_WS08		equ NTDDI_WIN6SP1
NTDDI_WS08SP2		equ NTDDI_WIN6SP2
NTDDI_WS08SP3		equ NTDDI_WIN6SP3
NTDDI_WS08SP4		equ NTDDI_WIN6SP4

NTDDI_WIN7		equ 0x06010000
NTDDI_WIN8		equ 0x06020000
NTDDI_WINBLUE		equ 0x06030000
NTDDI_WINTHRESHOLD	equ 0x0A000000
NTDDI_WIN10		equ 0x0A000000

NTDDI_WIN10_TH2		equ 0x0A000001
NTDDI_WIN10_RS1		equ 0x0A000002
NTDDI_WIN10_RS2		equ 0x0A000003
NTDDI_WIN10_RS3		equ 0x0A000004
NTDDI_WIN10_RS4		equ 0x0A000005
NTDDI_WIN10_RS5		equ 0x0A000006
NTDDI_WIN10_19H1	equ 0x0A000007

WDK_NTDDI_VERSION	equ NTDDI_WIN10_19H1

OSVERSION_MASK		equ 0xFFFF0000
SPVERSION_MASK		equ 0x0000FF00
SUBVERSION_MASK		equ 0x000000FF

OSVER macro Version
    exitm<((Version) and OSVERSION_MASK)>
    endm

SPVER macro Version
    exitm<(((Version) and SPVERSION_MASK) shr 8)>
    endm

SUBVER macro Version
    exitm<(((Version) and SUBVERSION_MASK) )>
    endm

ifdef DECLSPEC_DEPRECATED_DDK

if (NTDDI_VERSION GE NTDDI_WIN2K)
DECLSPEC_DEPRECATED_DDK_WIN2K equ DECSPEC_DEPRECATED_DDK
else
DECLSPEC_DEPRECATED_DDK_WIN2K equ <>
endif

if (NTDDI_VERSION GE NTDDI_WINXP)
DECLSPEC_DEPRECATED_DDK_WINXP equ DECSPEC_DEPRECATED_DDK
else
DECLSPEC_DEPRECATED_DDK_WINXP equ <>
endif

if (NTDDI_VERSION GE NTDDI_WS03)
DECLSPEC_DEPRECATED_DDK_WIN2003 equ DECSPEC_DEPRECATED_DDK
else
DECLSPEC_DEPRECATED_DDK_WIN2003 equ <>
endif

if (NTDDI_VERSION GE NTDDI_WIN6)
DECLSPEC_DEPRECATED_DDK_WIN6 equ DECSPEC_DEPRECATED_DDK
else
DECLSPEC_DEPRECATED_DDK_WIN6 equ <>
endif

DECLSPEC_DEPRECATED_DDK_LONGHORN equ DECSPEC_DEPRECATED_DDK_WIN6

endif

.pragma cref(pop)

if NOT defined(_WIN32_WINNT) AND NOT defined(NTDDI_VERSION)
ifndef PSAPI_VERSION
PSAPI_VERSION	equ 1
endif
endif

if NOT defined(_WIN32_WINNT) AND NOT defined(_CHICAGO_)
_WIN32_WINNT	equ _WIN32_WINNT_WIN7
endif

ifndef NTDDI_VERSION
ifdef _WIN32_WINNT
NTDDI_VERSION	equ (_WIN32_WINNT SHL 16)
_WINNT_WINNT	equ _WIN32_WINNT
else
NTDDI_VERSION	equ NTDDI_WIN7
_WINNT_WINNT	equ _WIN32_WINNT_WIN7
endif
endif
NTDDI_WIN2003 equ NTDDI_WIN2K

ifndef WINVER
ifdef _WIN95
WINVER		equ _WIN32_WINNT_NT4
elseifdef _WIN32
WINVER		equ _WIN32_WINNT_WS03
else
WINVER		equ _WIN32_WINNT_WIN7
_MSC_VER	equ 1700
_MSC_FULL_VER	equ 170000000
endif
endif

ifndef _WIN32_WINDOWS
_WIN32_WINDOWS	equ 0x0410
endif

ifndef _WIN32_IE
ifdef _WIN32_WINNT
if (_WIN32_WINNT LE _WIN32_WINNT_NT4)
_WIN32_IE	equ _WIN32_IE_IE50
elseif (_WIN32_WINNT LE _WIN32_WINNT_WIN2K)
_WIN32_IE	equ _WIN32_IE_IE501
elseif (_WIN32_WINNT LE _WIN32_WINNT_WINXP)
_WIN32_IE	equ _WIN32_IE_IE60
elseif (_WIN32_WINNT LE _WIN32_WINNT_WS03)
_WIN32_IE	equ _WIN32_IE_WS03
elseif (_WIN32_WINNT LE _WIN32_WINNT_VISTA)
_WIN32_IE	equ _WIN32_IE_LONGHORN
elseif (_WIN32_WINNT LE _WIN32_WINNT_WIN7)
_WIN32_IE	equ _WIN32_IE_WIN7
elseif (_WIN32_WINNT LE _WIN32_WINNT_WIN8)
_WIN32_IE	equ _WIN32_IE_WIN8
else
_WIN32_IE	equ 0x0A00
endif
else
_WIN32_IE	equ 0x0A00
endif
endif


if defined(_WIN32_WINNT) AND NOT defined(MIDL_PASS)

if ((WINVER LT 0x0400) AND (_WIN32_WINNT GT 0x0400))
.err <WINVER setting conflicts with _WIN32_WINNT setting>
endif

if (((OSVERSION_MASK AND NTDDI_VERSION) EQ NTDDI_WIN2K) AND NOT (_WIN32_WINNT EQ _WIN32_WINNT_WIN2K))
.err <NTDDI_VERSION setting conflicts with _WIN32_WINNT setting>
endif

if (((OSVERSION_MASK AND NTDDI_VERSION) EQ NTDDI_WINXP) AND NOT (_WIN32_WINNT EQ _WIN32_WINNT_WINXP))
.err <NTDDI_VERSION setting conflicts with _WIN32_WINNT setting>
endif

if (((OSVERSION_MASK AND NTDDI_VERSION) EQ NTDDI_WS03) AND NOT (_WIN32_WINNT EQ _WIN32_WINNT_WS03))
.err <NTDDI_VERSION setting conflicts with _WIN32_WINNT setting>
endif

if (((OSVERSION_MASK AND NTDDI_VERSION) EQ NTDDI_VISTA) AND NOT (_WIN32_WINNT EQ _WIN32_WINNT_VISTA))
error NTDDI_VERSION setting conflicts with _WIN32_WINNT setting
endif

if ((_WIN32_WINNT LT _WIN32_WINNT_WIN2K) AND (_WIN32_IE GT _WIN32_IE_IE60SP1))
.err <_WIN32_WINNT settings conflicts with _WIN32_IE setting>
endif

endif

.pragma list(pop)
endif

