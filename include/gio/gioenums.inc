ifndef __GIO_ENUMS_H__
__GIO_ENUMS_H__ equ <>
if NOT defined (__GIO_GIO_H_INSIDE__) AND NOT defined (GIO_COMPILATION)
.err <"Only gio/gio.h can be included directly.">
endif

include glib-object.inc

G_BEGIN_DECLS

.enum GAppInfoCreateFlags {
  G_APP_INFO_CREATE_NONE                           = 0,
  G_APP_INFO_CREATE_NEEDS_TERMINAL                 = (1 shl 0),
  G_APP_INFO_CREATE_SUPPORTS_URIS                  = (1 shl 1),
  G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION  = (1 shl 2)
}

.enum GConverterFlags {
  G_CONVERTER_NO_FLAGS     = 0,
  G_CONVERTER_INPUT_AT_END = (1 shl 0),
  G_CONVERTER_FLUSH        = (1 shl 1)
}

.enum GConverterResult {
  G_CONVERTER_ERROR     = 0,
  G_CONVERTER_CONVERTED = 1,
  G_CONVERTER_FINISHED  = 2,
  G_CONVERTER_FLUSHED   = 3
}

.enum GDataStreamByteOrder {
  G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN,
  G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN,
  G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN
}

.enum GDataStreamNewlineType {
  G_DATA_STREAM_NEWLINE_TYPE_LF,
  G_DATA_STREAM_NEWLINE_TYPE_CR,
  G_DATA_STREAM_NEWLINE_TYPE_CR_LF,
  G_DATA_STREAM_NEWLINE_TYPE_ANY
}

.enum GFileAttributeType {
  G_FILE_ATTRIBUTE_TYPE_INVALID = 0,
  G_FILE_ATTRIBUTE_TYPE_STRING,
  G_FILE_ATTRIBUTE_TYPE_BYTE_STRING,
  G_FILE_ATTRIBUTE_TYPE_BOOLEAN,
  G_FILE_ATTRIBUTE_TYPE_UINT32,
  G_FILE_ATTRIBUTE_TYPE_INT32,
  G_FILE_ATTRIBUTE_TYPE_UINT64,
  G_FILE_ATTRIBUTE_TYPE_INT64,
  G_FILE_ATTRIBUTE_TYPE_OBJECT,
  G_FILE_ATTRIBUTE_TYPE_STRINGV
}

.enum GFileAttributeInfoFlags {
  G_FILE_ATTRIBUTE_INFO_NONE            = 0,
  G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE  = (1 shl 0),
  G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED = (1 shl 1)
}

.enum GFileAttributeStatus {
  G_FILE_ATTRIBUTE_STATUS_UNSET = 0,
  G_FILE_ATTRIBUTE_STATUS_SET,
  G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING
}

.enum GFileQueryInfoFlags {
  G_FILE_QUERY_INFO_NONE              = 0,
  G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS = (1 shl 0)
}

.enum GFileCreateFlags {
  G_FILE_CREATE_NONE    = 0,
  G_FILE_CREATE_PRIVATE = (1 shl 0),
  G_FILE_CREATE_REPLACE_DESTINATION = (1 shl 1)
}

.enum GFileMeasureFlags {
  G_FILE_MEASURE_NONE                 = 0,
  G_FILE_MEASURE_REPORT_ANY_ERROR     = (1 shl 1),
  G_FILE_MEASURE_APPARENT_SIZE        = (1 shl 2),
  G_FILE_MEASURE_NO_XDEV              = (1 shl 3)
}

.enum GMountMountFlags {
  G_MOUNT_MOUNT_NONE = 0
}

.enum GMountUnmountFlags {
  G_MOUNT_UNMOUNT_NONE  = 0,
  G_MOUNT_UNMOUNT_FORCE = (1 shl 0)
}

.enum GDriveStartFlags {
  G_DRIVE_START_NONE = 0
}

.enum GDriveStartStopType {
  G_DRIVE_START_STOP_TYPE_UNKNOWN,
  G_DRIVE_START_STOP_TYPE_SHUTDOWN,
  G_DRIVE_START_STOP_TYPE_NETWORK,
  G_DRIVE_START_STOP_TYPE_MULTIDISK,
  G_DRIVE_START_STOP_TYPE_PASSWORD
}

.enum GFileCopyFlags {
  G_FILE_COPY_NONE                 = 0,
  G_FILE_COPY_OVERWRITE            = (1 shl 0),
  G_FILE_COPY_BACKUP               = (1 shl 1),
  G_FILE_COPY_NOFOLLOW_SYMLINKS    = (1 shl 2),
  G_FILE_COPY_ALL_METADATA         = (1 shl 3),
  G_FILE_COPY_NO_FALLBACK_FOR_MOVE = (1 shl 4),
  G_FILE_COPY_TARGET_DEFAULT_PERMS = (1 shl 5)
}

.enum GFileMonitorFlags {
  G_FILE_MONITOR_NONE             = 0,
  G_FILE_MONITOR_WATCH_MOUNTS     = (1 shl 0),
  G_FILE_MONITOR_SEND_MOVED       = (1 shl 1),
  G_FILE_MONITOR_WATCH_HARD_LINKS = (1 shl 2),
  G_FILE_MONITOR_WATCH_MOVES      = (1 shl 3)
}

.enum GFileType {
  G_FILE_TYPE_UNKNOWN = 0,
  G_FILE_TYPE_REGULAR,
  G_FILE_TYPE_DIRECTORY,
  G_FILE_TYPE_SYMBOLIC_LINK,
  G_FILE_TYPE_SPECIAL,
  G_FILE_TYPE_SHORTCUT,
  G_FILE_TYPE_MOUNTABLE
}

.enum GFilesystemPreviewType {
  G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS = 0,
  G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL,
  G_FILESYSTEM_PREVIEW_TYPE_NEVER
}

.enum GFileMonitorEvent {
  G_FILE_MONITOR_EVENT_CHANGED,
  G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT,
  G_FILE_MONITOR_EVENT_DELETED,
  G_FILE_MONITOR_EVENT_CREATED,
  G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED,
  G_FILE_MONITOR_EVENT_PRE_UNMOUNT,
  G_FILE_MONITOR_EVENT_UNMOUNTED,
  G_FILE_MONITOR_EVENT_MOVED,
  G_FILE_MONITOR_EVENT_RENAMED,
  G_FILE_MONITOR_EVENT_MOVED_IN,
  G_FILE_MONITOR_EVENT_MOVED_OUT
}

.enum GIOErrorEnum {
  G_IO_ERROR_FAILED,
  G_IO_ERROR_NOT_FOUND,
  G_IO_ERROR_EXISTS,
  G_IO_ERROR_IS_DIRECTORY,
  G_IO_ERROR_NOT_DIRECTORY,
  G_IO_ERROR_NOT_EMPTY,
  G_IO_ERROR_NOT_REGULAR_FILE,
  G_IO_ERROR_NOT_SYMBOLIC_LINK,
  G_IO_ERROR_NOT_MOUNTABLE_FILE,
  G_IO_ERROR_FILENAME_TOO_LONG,
  G_IO_ERROR_INVALID_FILENAME,
  G_IO_ERROR_TOO_MANY_LINKS,
  G_IO_ERROR_NO_SPACE,
  G_IO_ERROR_INVALID_ARGUMENT,
  G_IO_ERROR_PERMISSION_DENIED,
  G_IO_ERROR_NOT_SUPPORTED,
  G_IO_ERROR_NOT_MOUNTED,
  G_IO_ERROR_ALREADY_MOUNTED,
  G_IO_ERROR_CLOSED,
  G_IO_ERROR_CANCELLED,
  G_IO_ERROR_PENDING,
  G_IO_ERROR_READ_ONLY,
  G_IO_ERROR_CANT_CREATE_BACKUP,
  G_IO_ERROR_WRONG_ETAG,
  G_IO_ERROR_TIMED_OUT,
  G_IO_ERROR_WOULD_RECURSE,
  G_IO_ERROR_BUSY,
  G_IO_ERROR_WOULD_BLOCK,
  G_IO_ERROR_HOST_NOT_FOUND,
  G_IO_ERROR_WOULD_MERGE,
  G_IO_ERROR_FAILED_HANDLED,
  G_IO_ERROR_TOO_MANY_OPEN_FILES,
  G_IO_ERROR_NOT_INITIALIZED,
  G_IO_ERROR_ADDRESS_IN_USE,
  G_IO_ERROR_PARTIAL_INPUT,
  G_IO_ERROR_INVALID_DATA,
  G_IO_ERROR_DBUS_ERROR,
  G_IO_ERROR_HOST_UNREACHABLE,
  G_IO_ERROR_NETWORK_UNREACHABLE,
  G_IO_ERROR_CONNECTION_REFUSED,
  G_IO_ERROR_PROXY_FAILED,
  G_IO_ERROR_PROXY_AUTH_FAILED,
  G_IO_ERROR_PROXY_NEED_AUTH,
  G_IO_ERROR_PROXY_NOT_ALLOWED,
  G_IO_ERROR_BROKEN_PIPE,
  G_IO_ERROR_CONNECTION_CLOSED = G_IO_ERROR_BROKEN_PIPE,
  G_IO_ERROR_NOT_CONNECTED,
  G_IO_ERROR_MESSAGE_TOO_LARGE
}

.enum GAskPasswordFlags {
  G_ASK_PASSWORD_NEED_PASSWORD       = (1 shl 0),
  G_ASK_PASSWORD_NEED_USERNAME       = (1 shl 1),
  G_ASK_PASSWORD_NEED_DOMAIN         = (1 shl 2),
  G_ASK_PASSWORD_SAVING_SUPPORTED    = (1 shl 3),
  G_ASK_PASSWORD_ANONYMOUS_SUPPORTED = (1 shl 4)
}

.enum GPasswordSave {
  G_PASSWORD_SAVE_NEVER,
  G_PASSWORD_SAVE_FOR_SESSION,
  G_PASSWORD_SAVE_PERMANENTLY
}

.enum GMountOperationResult {
  G_MOUNT_OPERATION_HANDLED,
  G_MOUNT_OPERATION_ABORTED,
  G_MOUNT_OPERATION_UNHANDLED
}

.enum GOutputStreamSpliceFlags {
  G_OUTPUT_STREAM_SPLICE_NONE         = 0,
  G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE = (1 shl 0),
  G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET = (1 shl 1)
}

.enum GIOStreamSpliceFlags {
  G_IO_STREAM_SPLICE_NONE          = 0,
  G_IO_STREAM_SPLICE_CLOSE_STREAM1 = (1 shl 0),
  G_IO_STREAM_SPLICE_CLOSE_STREAM2 = (1 shl 1),
  G_IO_STREAM_SPLICE_WAIT_FOR_BOTH = (1 shl 2)
}

.enum GEmblemOrigin {
  G_EMBLEM_ORIGIN_UNKNOWN,
  G_EMBLEM_ORIGIN_DEVICE,
  G_EMBLEM_ORIGIN_LIVEMETADATA,
  G_EMBLEM_ORIGIN_TAG
}

.enum GResolverError {
  G_RESOLVER_ERROR_NOT_FOUND,
  G_RESOLVER_ERROR_TEMPORARY_FAILURE,
  G_RESOLVER_ERROR_INTERNAL
}

.enum GResolverRecordType {
  G_RESOLVER_RECORD_SRV = 1,
  G_RESOLVER_RECORD_MX,
  G_RESOLVER_RECORD_TXT,
  G_RESOLVER_RECORD_SOA,
  G_RESOLVER_RECORD_NS
}

.enum GResourceError {
  G_RESOURCE_ERROR_NOT_FOUND,
  G_RESOURCE_ERROR_INTERNAL
}

.enum GResourceFlags {
  G_RESOURCE_FLAGS_NONE       = 0,
  G_RESOURCE_FLAGS_COMPRESSED = (1 shl 0)
}

.enum GResourceLookupFlags {
  G_RESOURCE_LOOKUP_FLAGS_NONE = 0
}

.enum GSocketFamily {
  G_SOCKET_FAMILY_INVALID,
  G_SOCKET_FAMILY_UNIX = GLIB_SYSDEF_AF_UNIX,
  G_SOCKET_FAMILY_IPV4 = GLIB_SYSDEF_AF_INET,
  G_SOCKET_FAMILY_IPV6 = GLIB_SYSDEF_AF_INET6
}

.enum GSocketType {
  G_SOCKET_TYPE_INVALID,
  G_SOCKET_TYPE_STREAM,
  G_SOCKET_TYPE_DATAGRAM,
  G_SOCKET_TYPE_SEQPACKET
}

.enum GSocketMsgFlags {
  G_SOCKET_MSG_NONE,
  G_SOCKET_MSG_OOB = GLIB_SYSDEF_MSG_OOB,
  G_SOCKET_MSG_PEEK = GLIB_SYSDEF_MSG_PEEK,
  G_SOCKET_MSG_DONTROUTE = GLIB_SYSDEF_MSG_DONTROUTE
}

.enum GSocketProtocol {
  G_SOCKET_PROTOCOL_UNKNOWN = -1,
  G_SOCKET_PROTOCOL_DEFAULT = 0,
  G_SOCKET_PROTOCOL_TCP     = 6,
  G_SOCKET_PROTOCOL_UDP     = 17,
  G_SOCKET_PROTOCOL_SCTP    = 132
}

.enum GZlibCompressorFormat {
  G_ZLIB_COMPRESSOR_FORMAT_ZLIB,
  G_ZLIB_COMPRESSOR_FORMAT_GZIP,
  G_ZLIB_COMPRESSOR_FORMAT_RAW
}

.enum GUnixSocketAddressType {
  G_UNIX_SOCKET_ADDRESS_INVALID,
  G_UNIX_SOCKET_ADDRESS_ANONYMOUS,
  G_UNIX_SOCKET_ADDRESS_PATH,
  G_UNIX_SOCKET_ADDRESS_ABSTRACT,
  G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED
}

.enum GBusType {
  G_BUS_TYPE_STARTER = -1,
  G_BUS_TYPE_NONE    = 0,
  G_BUS_TYPE_SYSTEM  = 1,
  G_BUS_TYPE_SESSION = 2
}

.enum GBusNameOwnerFlags {
  G_BUS_NAME_OWNER_FLAGS_NONE = 0,
  G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT = (1 shl 0),
  G_BUS_NAME_OWNER_FLAGS_REPLACE = (1 shl 1)
}

.enum GBusNameWatcherFlags {
  G_BUS_NAME_WATCHER_FLAGS_NONE = 0,
  G_BUS_NAME_WATCHER_FLAGS_AUTO_START = (1 shl 0)
}

.enum GDBusProxyFlags {
  G_DBUS_PROXY_FLAGS_NONE = 0,
  G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES = (1 shl 0),
  G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS = (1 shl 1),
  G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START = (1 shl 2),
  G_DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES = (1 shl 3),
  G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START_AT_CONSTRUCTION = (1 shl 4)
}

.enum GDBusError {
  G_DBUS_ERROR_FAILED,
  G_DBUS_ERROR_NO_MEMORY,
  G_DBUS_ERROR_SERVICE_UNKNOWN,
  G_DBUS_ERROR_NAME_HAS_NO_OWNER,
  G_DBUS_ERROR_NO_REPLY,
  G_DBUS_ERROR_IO_ERROR,
  G_DBUS_ERROR_BAD_ADDRESS,
  G_DBUS_ERROR_NOT_SUPPORTED,
  G_DBUS_ERROR_LIMITS_EXCEEDED,
  G_DBUS_ERROR_ACCESS_DENIED,
  G_DBUS_ERROR_AUTH_FAILED,
  G_DBUS_ERROR_NO_SERVER,
  G_DBUS_ERROR_TIMEOUT,
  G_DBUS_ERROR_NO_NETWORK,
  G_DBUS_ERROR_ADDRESS_IN_USE,
  G_DBUS_ERROR_DISCONNECTED,
  G_DBUS_ERROR_INVALID_ARGS,
  G_DBUS_ERROR_FILE_NOT_FOUND,
  G_DBUS_ERROR_FILE_EXISTS,
  G_DBUS_ERROR_UNKNOWN_METHOD,
  G_DBUS_ERROR_TIMED_OUT,
  G_DBUS_ERROR_MATCH_RULE_NOT_FOUND,
  G_DBUS_ERROR_MATCH_RULE_INVALID,
  G_DBUS_ERROR_SPAWN_EXEC_FAILED,
  G_DBUS_ERROR_SPAWN_FORK_FAILED,
  G_DBUS_ERROR_SPAWN_CHILD_EXITED,
  G_DBUS_ERROR_SPAWN_CHILD_SIGNALED,
  G_DBUS_ERROR_SPAWN_FAILED,
  G_DBUS_ERROR_SPAWN_SETUP_FAILED,
  G_DBUS_ERROR_SPAWN_CONFIG_INVALID,
  G_DBUS_ERROR_SPAWN_SERVICE_INVALID,
  G_DBUS_ERROR_SPAWN_SERVICE_NOT_FOUND,
  G_DBUS_ERROR_SPAWN_PERMISSIONS_INVALID,
  G_DBUS_ERROR_SPAWN_FILE_INVALID,
  G_DBUS_ERROR_SPAWN_NO_MEMORY,
  G_DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWN,
  G_DBUS_ERROR_INVALID_SIGNATURE,
  G_DBUS_ERROR_INVALID_FILE_CONTENT,
  G_DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWN,
  G_DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWN,
  G_DBUS_ERROR_OBJECT_PATH_IN_USE,
  G_DBUS_ERROR_UNKNOWN_OBJECT,
  G_DBUS_ERROR_UNKNOWN_INTERFACE,
  G_DBUS_ERROR_UNKNOWN_PROPERTY,
  G_DBUS_ERROR_PROPERTY_READ_ONLY
}

.enum GDBusConnectionFlags {
  G_DBUS_CONNECTION_FLAGS_NONE = 0,
  G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT = (1 shl 0),
  G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER = (1 shl 1),
  G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS = (1 shl 2),
  G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION = (1 shl 3),
  G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING = (1 shl 4)
}

.enum GDBusCapabilityFlags {
  G_DBUS_CAPABILITY_FLAGS_NONE = 0,
  G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING = (1 shl 0)
}

.enum GDBusCallFlags {
  G_DBUS_CALL_FLAGS_NONE = 0,
  G_DBUS_CALL_FLAGS_NO_AUTO_START = (1 shl 0),
  G_DBUS_CALL_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION = (1 shl 1)
}

.enum GDBusMessageType {
  G_DBUS_MESSAGE_TYPE_INVALID,
  G_DBUS_MESSAGE_TYPE_METHOD_CALL,
  G_DBUS_MESSAGE_TYPE_METHOD_RETURN,
  G_DBUS_MESSAGE_TYPE_ERROR,
  G_DBUS_MESSAGE_TYPE_SIGNAL
}

.enum GDBusMessageFlags {
  G_DBUS_MESSAGE_FLAGS_NONE = 0,
  G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED = (1 shl 0),
  G_DBUS_MESSAGE_FLAGS_NO_AUTO_START = (1 shl 1),
  G_DBUS_MESSAGE_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION = (1 shl 2)
}

.enum GDBusMessageHeaderField {
  G_DBUS_MESSAGE_HEADER_FIELD_INVALID,
  G_DBUS_MESSAGE_HEADER_FIELD_PATH,
  G_DBUS_MESSAGE_HEADER_FIELD_INTERFACE,
  G_DBUS_MESSAGE_HEADER_FIELD_MEMBER,
  G_DBUS_MESSAGE_HEADER_FIELD_ERROR_NAME,
  G_DBUS_MESSAGE_HEADER_FIELD_REPLY_SERIAL,
  G_DBUS_MESSAGE_HEADER_FIELD_DESTINATION,
  G_DBUS_MESSAGE_HEADER_FIELD_SENDER,
  G_DBUS_MESSAGE_HEADER_FIELD_SIGNATURE,
  G_DBUS_MESSAGE_HEADER_FIELD_NUM_UNIX_FDS
}

.enum GDBusPropertyInfoFlags {
  G_DBUS_PROPERTY_INFO_FLAGS_NONE = 0,
  G_DBUS_PROPERTY_INFO_FLAGS_READABLE = (1 shl 0),
  G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE = (1 shl 1)
}

.enum GDBusSubtreeFlags {
  G_DBUS_SUBTREE_FLAGS_NONE = 0,
  G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES = (1 shl 0)
}

.enum GDBusServerFlags {
  G_DBUS_SERVER_FLAGS_NONE = 0,
  G_DBUS_SERVER_FLAGS_RUN_IN_THREAD = (1 shl 0),
  G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS = (1 shl 1)
}

.enum GDBusSignalFlags {
  G_DBUS_SIGNAL_FLAGS_NONE = 0,
  G_DBUS_SIGNAL_FLAGS_NO_MATCH_RULE = (1 shl 0),
  G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_NAMESPACE = (1 shl 1),
  G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_PATH = (1 shl 2)
}

.enum GDBusSendMessageFlags {
  G_DBUS_SEND_MESSAGE_FLAGS_NONE = 0,
  G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL = (1 shl 0)
}

.enum GCredentialsType {
  G_CREDENTIALS_TYPE_INVALID,
  G_CREDENTIALS_TYPE_LINUX_UCRED,
  G_CREDENTIALS_TYPE_FREEBSD_CMSGCRED,
  G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED,
  G_CREDENTIALS_TYPE_SOLARIS_UCRED,
  G_CREDENTIALS_TYPE_NETBSD_UNPCBID
}

.enum GDBusMessageByteOrder {
  G_DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN    = 66,;'B',
  G_DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN = 108;'l'
}

.enum GApplicationFlags {
  G_APPLICATION_FLAGS_NONE,
  G_APPLICATION_IS_SERVICE           = (1 shl 0),
  G_APPLICATION_IS_LAUNCHER          = (1 shl 1),
  G_APPLICATION_HANDLES_OPEN         = (1 shl 2),
  G_APPLICATION_HANDLES_COMMAND_LINE = (1 shl 3),
  G_APPLICATION_SEND_ENVIRONMENT     = (1 shl 4),
  G_APPLICATION_NON_UNIQUE           = (1 shl 5),
  G_APPLICATION_CAN_OVERRIDE_APP_ID  = (1 shl 6)
}

.enum GTlsError {
  G_TLS_ERROR_UNAVAILABLE,
  G_TLS_ERROR_MISC,
  G_TLS_ERROR_BAD_CERTIFICATE,
  G_TLS_ERROR_NOT_TLS,
  G_TLS_ERROR_HANDSHAKE,
  G_TLS_ERROR_CERTIFICATE_REQUIRED,
  G_TLS_ERROR_EOF
}

.enum GTlsCertificateFlags {
  G_TLS_CERTIFICATE_UNKNOWN_CA    = (1 shl 0),
  G_TLS_CERTIFICATE_BAD_IDENTITY  = (1 shl 1),
  G_TLS_CERTIFICATE_NOT_ACTIVATED = (1 shl 2),
  G_TLS_CERTIFICATE_EXPIRED       = (1 shl 3),
  G_TLS_CERTIFICATE_REVOKED       = (1 shl 4),
  G_TLS_CERTIFICATE_INSECURE      = (1 shl 5),
  G_TLS_CERTIFICATE_GENERIC_ERROR = (1 shl 6),
  G_TLS_CERTIFICATE_VALIDATE_ALL  = 0x007f
}

.enum GTlsAuthenticationMode {
  G_TLS_AUTHENTICATION_NONE,
  G_TLS_AUTHENTICATION_REQUESTED,
  G_TLS_AUTHENTICATION_REQUIRED
}

.enum GTlsRehandshakeMode {
  G_TLS_REHANDSHAKE_NEVER,
  G_TLS_REHANDSHAKE_SAFELY,
  G_TLS_REHANDSHAKE_UNSAFELY
}


.enum GTlsPasswordFlags {
  G_TLS_PASSWORD_NONE = 0,
  G_TLS_PASSWORD_RETRY = 1 shl 1,
  G_TLS_PASSWORD_MANY_TRIES = 1 shl 2,
  G_TLS_PASSWORD_FINAL_TRY = 1 shl 3
}

.enum GTlsInteractionResult {
  G_TLS_INTERACTION_UNHANDLED,
  G_TLS_INTERACTION_HANDLED,
  G_TLS_INTERACTION_FAILED
}

.enum GDBusInterfaceSkeletonFlags {
  G_DBUS_INTERFACE_SKELETON_FLAGS_NONE = 0,
  G_DBUS_INTERFACE_SKELETON_FLAGS_HANDLE_METHOD_INVOCATIONS_IN_THREAD = (1 shl 0)
}

.enum GDBusObjectManagerClientFlags {
  G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE = 0,
  G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_DO_NOT_AUTO_START = (1 shl 0)
}

.enum GTlsDatabaseVerifyFlags {
  G_TLS_DATABASE_VERIFY_NONE = 0
}

.enum GTlsDatabaseLookupFlags {
  G_TLS_DATABASE_LOOKUP_NONE = 0,
  G_TLS_DATABASE_LOOKUP_KEYPAIR = 1
}

.enum GTlsCertificateRequestFlags {
  G_TLS_CERTIFICATE_REQUEST_NONE = 0
}

.enum GIOModuleScopeFlags {
  G_IO_MODULE_SCOPE_NONE,
  G_IO_MODULE_SCOPE_BLOCK_DUPLICATES
}

.enum GSocketClientEvent {
  G_SOCKET_CLIENT_RESOLVING,
  G_SOCKET_CLIENT_RESOLVED,
  G_SOCKET_CLIENT_CONNECTING,
  G_SOCKET_CLIENT_CONNECTED,
  G_SOCKET_CLIENT_PROXY_NEGOTIATING,
  G_SOCKET_CLIENT_PROXY_NEGOTIATED,
  G_SOCKET_CLIENT_TLS_HANDSHAKING,
  G_SOCKET_CLIENT_TLS_HANDSHAKED,
  G_SOCKET_CLIENT_COMPLETE
}

.enum GSocketListenerEvent {
  G_SOCKET_LISTENER_BINDING,
  G_SOCKET_LISTENER_BOUND,
  G_SOCKET_LISTENER_LISTENING,
  G_SOCKET_LISTENER_LISTENED
}

.enum GTestDBusFlags {
  G_TEST_DBUS_NONE = 0
}

.enum GSubprocessFlags {
  G_SUBPROCESS_FLAGS_NONE            = 0,
  G_SUBPROCESS_FLAGS_STDIN_PIPE      = (1 shl 0),
  G_SUBPROCESS_FLAGS_STDIN_INHERIT   = (1 shl 1),
  G_SUBPROCESS_FLAGS_STDOUT_PIPE     = (1 shl 2),
  G_SUBPROCESS_FLAGS_STDOUT_SILENCE  = (1 shl 3),
  G_SUBPROCESS_FLAGS_STDERR_PIPE     = (1 shl 4),
  G_SUBPROCESS_FLAGS_STDERR_SILENCE  = (1 shl 5),
  G_SUBPROCESS_FLAGS_STDERR_MERGE    = (1 shl 6),
  G_SUBPROCESS_FLAGS_INHERIT_FDS     = (1 shl 7)
}

.enum GNotificationPriority {
  G_NOTIFICATION_PRIORITY_NORMAL,
  G_NOTIFICATION_PRIORITY_LOW,
  G_NOTIFICATION_PRIORITY_HIGH,
  G_NOTIFICATION_PRIORITY_URGENT
}

.enum GNetworkConnectivity {
  G_NETWORK_CONNECTIVITY_LOCAL       = 1,
  G_NETWORK_CONNECTIVITY_LIMITED     = 2,
  G_NETWORK_CONNECTIVITY_PORTAL      = 3,
  G_NETWORK_CONNECTIVITY_FULL        = 4
}

G_END_DECLS

endif
